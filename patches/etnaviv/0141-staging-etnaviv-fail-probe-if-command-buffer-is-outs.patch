From c340ac2ecda5b43ba2c112966f9a7471d7958c94 Mon Sep 17 00:00:00 2001
From: Lucas Stach <l.stach@pengutronix.de>
Date: Thu, 29 Oct 2015 12:52:45 +0100
Subject: [PATCH 141/162] staging: etnaviv: fail probe if command buffer is
 outside physical window

Reject the command buffer and fail GPU probing if the command buffer was
allocated outside the physical memory window of the GPU. This should never
happen on a properly configured system, but for now this at least provides
a clear indication of what went wrong instead of falling over later.

Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
---
 drivers/staging/etnaviv/etnaviv_gpu.c | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/drivers/staging/etnaviv/etnaviv_gpu.c b/drivers/staging/etnaviv/etnaviv_gpu.c
index 26ea1a0..43c4117 100644
--- a/drivers/staging/etnaviv/etnaviv_gpu.c
+++ b/drivers/staging/etnaviv/etnaviv_gpu.c
@@ -545,6 +545,12 @@ int etnaviv_gpu_init(struct etnaviv_gpu *gpu)
 		dev_err(gpu->dev, "could not create command buffer\n");
 		goto fail;
 	}
+	if (gpu->buffer->paddr - gpu->memory_base > 0x80000000) {
+		ret = -EINVAL;
+		dev_err(gpu->dev,
+			"command buffer outside valid memory window\n");
+		goto free_buffer;
+	}
 
 	/* Setup event management */
 	spin_lock_init(&gpu->event_spinlock);
@@ -564,6 +570,9 @@ int etnaviv_gpu_init(struct etnaviv_gpu *gpu)
 
 	return 0;
 
+free_buffer:
+	etnaviv_gpu_cmdbuf_free(gpu->buffer);
+	gpu->buffer = NULL;
 fail:
 	pm_runtime_mark_last_busy(gpu->dev);
 	pm_runtime_put_autosuspend(gpu->dev);
-- 
2.6.2

