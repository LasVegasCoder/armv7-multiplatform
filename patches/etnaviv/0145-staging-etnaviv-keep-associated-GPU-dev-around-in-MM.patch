From d64c124bf6a8f6e68dd4c5bbe242da7b5d26ee7f Mon Sep 17 00:00:00 2001
From: Lucas Stach <l.stach@pengutronix.de>
Date: Thu, 29 Oct 2015 12:52:49 +0100
Subject: [PATCH 145/178] staging: etnaviv: keep associated GPU dev around in
 MMU

As we have one MMU per GPU device anyway, we can simplyfy locking
quite a bit by reusing the GPU lock for the associated MMU.

Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
---
 drivers/staging/etnaviv/etnaviv_gpu.c | 2 +-
 drivers/staging/etnaviv/etnaviv_mmu.c | 7 ++++---
 drivers/staging/etnaviv/etnaviv_mmu.h | 5 +++--
 3 files changed, 8 insertions(+), 6 deletions(-)

diff --git a/drivers/staging/etnaviv/etnaviv_gpu.c b/drivers/staging/etnaviv/etnaviv_gpu.c
index 0160acd..67199dd 100644
--- a/drivers/staging/etnaviv/etnaviv_gpu.c
+++ b/drivers/staging/etnaviv/etnaviv_gpu.c
@@ -532,7 +532,7 @@ int etnaviv_gpu_init(struct etnaviv_gpu *gpu)
 
 	/* TODO: we will leak here memory - fix it! */
 
-	gpu->mmu = etnaviv_iommu_new(gpu->dev, iommu, version);
+	gpu->mmu = etnaviv_iommu_new(gpu, iommu, version);
 	if (!gpu->mmu) {
 		ret = -ENOMEM;
 		goto fail;
diff --git a/drivers/staging/etnaviv/etnaviv_mmu.c b/drivers/staging/etnaviv/etnaviv_mmu.c
index ca317f6..341bb93 100644
--- a/drivers/staging/etnaviv/etnaviv_mmu.c
+++ b/drivers/staging/etnaviv/etnaviv_mmu.c
@@ -16,6 +16,7 @@
 
 #include "etnaviv_drv.h"
 #include "etnaviv_gem.h"
+#include "etnaviv_gpu.h"
 #include "etnaviv_mmu.h"
 
 static int etnaviv_fault_handler(struct iommu_domain *iommu, struct device *dev,
@@ -259,7 +260,7 @@ void etnaviv_iommu_destroy(struct etnaviv_iommu *mmu)
 	kfree(mmu);
 }
 
-struct etnaviv_iommu *etnaviv_iommu_new(struct device *dev,
+struct etnaviv_iommu *etnaviv_iommu_new(struct etnaviv_gpu *gpu,
 	struct iommu_domain *domain, enum etnaviv_iommu_version version)
 {
 	struct etnaviv_iommu *mmu;
@@ -269,14 +270,14 @@ struct etnaviv_iommu *etnaviv_iommu_new(struct device *dev,
 		return ERR_PTR(-ENOMEM);
 
 	mmu->domain = domain;
-	mmu->dev = dev;
+	mmu->gpu = gpu;
 	mmu->version = version;
 
 	drm_mm_init(&mmu->mm, domain->geometry.aperture_start,
 		    domain->geometry.aperture_end -
 		      domain->geometry.aperture_start + 1);
 
-	iommu_set_fault_handler(domain, etnaviv_fault_handler, dev);
+	iommu_set_fault_handler(domain, etnaviv_fault_handler, gpu->dev);
 
 	return mmu;
 }
diff --git a/drivers/staging/etnaviv/etnaviv_mmu.h b/drivers/staging/etnaviv/etnaviv_mmu.h
index 444ef29..f7a3d19 100644
--- a/drivers/staging/etnaviv/etnaviv_mmu.h
+++ b/drivers/staging/etnaviv/etnaviv_mmu.h
@@ -24,10 +24,11 @@ enum etnaviv_iommu_version {
 	ETNAVIV_IOMMU_V2,
 };
 
+struct etnaviv_gpu;
 struct etnaviv_vram_mapping;
 
 struct etnaviv_iommu {
-	struct device *dev;
+	struct etnaviv_gpu *gpu;
 	struct iommu_domain *domain;
 
 	enum etnaviv_iommu_version version;
@@ -52,7 +53,7 @@ int etnaviv_iommu_map_gem(struct etnaviv_iommu *mmu,
 void etnaviv_iommu_unmap_gem(struct etnaviv_vram_mapping *mapping);
 void etnaviv_iommu_destroy(struct etnaviv_iommu *iommu);
 
-struct etnaviv_iommu *etnaviv_iommu_new(struct device *dev,
+struct etnaviv_iommu *etnaviv_iommu_new(struct etnaviv_gpu *gpu,
 	struct iommu_domain *domain, enum etnaviv_iommu_version version);
 
 #endif /* __ETNAVIV_MMU_H__ */
-- 
2.6.2

