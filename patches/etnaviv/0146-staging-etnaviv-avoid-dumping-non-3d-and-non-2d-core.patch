From bfa114f725e11fab8a1ac2bcea21326047785f85 Mon Sep 17 00:00:00 2001
From: Russell King <rmk+kernel@arm.linux.org.uk>
Date: Fri, 30 Oct 2015 09:58:07 +0000
Subject: [PATCH 146/148] staging: etnaviv: avoid dumping non-3d and non-2d
 cores

Avoid dumping the VG core state in etnaviv_gpu_debugfs().  Reading
registers causes an imprecise external abort:

Unhandled fault: imprecise external abort (0x1406) at 0x008d503c
pgd = ea454000
[008d503c] *pgd=670e1831
Internal error: : 1406 [#1] SMP ARM
Modules linked in: bnep rfcomm bluetooth algif_hash af_alg nfsd exportfs coda snd_soc_fsl_spdif caam_jr imx_pcm_dma v4l2_mem2mem videobuf2_dma_contig videobuf2_vmalloc imx_sdma videobuf2_memops imx2_wdt imx_thermal caam snd_soc_imx_spdif
CPU: 2 PID: 1454 Comm: less Not tainted 4.3.0-rc7+ #1867
Hardware name: Freescale i.MX6 Quad/DualLite (Device Tree)
task: ee39f300 ti: e9f36000 task.ti: e9f36000
PC is at etnaviv_readl+0x14/0x18
LR is at etnaviv_gpu_debugfs+0x5c/0x624
pc : [<c053f86c>]    lr : [<c054368c>]    psr: 20000013
sp : e9f37e10  ip : e9f37e20  fp : e9f37e1c
r10: 00000001  r9 : e9f37e98  r8 : e9f37f78
r7 : c0543630  r6 : e82cfa80  r5 : 000001f4  r4 : ee23f010
r3 : ee39f300  r2 : 00000002  r1 : ee39f300  r0 : 019a01ff
Flags: nzCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none
Control: 10c5387d  Table: 3a45404a  DAC: 00000051
Process cat (pid: 1481, stack limit = 0xe9f36210)

Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
---
 drivers/staging/etnaviv/etnaviv_gpu.c | 26 +++++++++++++++-----------
 1 file changed, 15 insertions(+), 11 deletions(-)

diff --git a/drivers/staging/etnaviv/etnaviv_gpu.c b/drivers/staging/etnaviv/etnaviv_gpu.c
index 67199dd..9856a20 100644
--- a/drivers/staging/etnaviv/etnaviv_gpu.c
+++ b/drivers/staging/etnaviv/etnaviv_gpu.c
@@ -613,17 +613,6 @@ int etnaviv_gpu_debugfs(struct etnaviv_gpu *gpu, struct seq_file *m)
 
 	seq_printf(m, "%s Status:\n", dev_name(gpu->dev));
 
-	ret = pm_runtime_get_sync(gpu->dev);
-	if (ret < 0)
-		return ret;
-
-	dma_lo = gpu_read(gpu, VIVS_FE_DMA_LOW);
-	dma_hi = gpu_read(gpu, VIVS_FE_DMA_HIGH);
-	axi = gpu_read(gpu, VIVS_HI_AXI_STATUS);
-	idle = gpu_read(gpu, VIVS_HI_IDLE_STATE);
-
-	verify_dma(gpu, &debug);
-
 	seq_puts(m, "\tfeatures\n");
 	seq_printf(m, "\t minor_features0: 0x%08x\n",
 		   gpu->identity.minor_features0);
@@ -656,6 +645,21 @@ int etnaviv_gpu_debugfs(struct etnaviv_gpu *gpu, struct seq_file *m)
 	seq_printf(m, "\t num_constants: %d\n",
 			gpu->identity.num_constants);
 
+	if (!(gpu->identity.features &
+	      (chipFeatures_PIPE_2D | chipFeatures_PIPE_3D)))
+		return 0;
+
+	ret = pm_runtime_get_sync(gpu->dev);
+	if (ret < 0)
+		return ret;
+
+	dma_lo = gpu_read(gpu, VIVS_FE_DMA_LOW);
+	dma_hi = gpu_read(gpu, VIVS_FE_DMA_HIGH);
+	axi = gpu_read(gpu, VIVS_HI_AXI_STATUS);
+	idle = gpu_read(gpu, VIVS_HI_IDLE_STATE);
+
+	verify_dma(gpu, &debug);
+
 	seq_printf(m, "\taxi: 0x%08x\n", axi);
 	seq_printf(m, "\tidle: 0x%08x\n", idle);
 	idle |= ~gpu->idle_mask & ~VIVS_HI_IDLE_STATE_AXI_LP;
-- 
2.6.1

