From 8835627fd6d2cf6f521d129237329bc35ac9eb2b Mon Sep 17 00:00:00 2001
From: Lucas Stach <l.stach@pengutronix.de>
Date: Thu, 29 Oct 2015 12:52:42 +0100
Subject: [PATCH 140/194] staging: etnaviv: fix cache maintenance on cpu_prep

Use correct in-kernel type for OP storage. Make sure to bail out if waiting
for object idle failed and not attempt any cache maintenance in that case
as it might lead to memory corruption.

Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
---
 drivers/staging/etnaviv/etnaviv_gem.c | 8 +++++---
 drivers/staging/etnaviv/etnaviv_gem.h | 2 +-
 2 files changed, 6 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/etnaviv/etnaviv_gem.c b/drivers/staging/etnaviv/etnaviv_gem.c
index 1381c95..0e0c783 100644
--- a/drivers/staging/etnaviv/etnaviv_gem.c
+++ b/drivers/staging/etnaviv/etnaviv_gem.c
@@ -396,7 +396,7 @@ int etnaviv_gem_cpu_prep(struct drm_gem_object *obj, u32 op,
 {
 	struct etnaviv_gem_object *etnaviv_obj = to_etnaviv_bo(obj);
 	struct drm_device *dev = obj->dev;
-	int ret = 0;
+	int ret;
 
 	if (is_active(etnaviv_obj)) {
 		struct etnaviv_gpu *gpu = etnaviv_obj->gpu;
@@ -410,11 +410,13 @@ int etnaviv_gem_cpu_prep(struct drm_gem_object *obj, u32 op,
 			timeout = NULL;
 
 		ret = etnaviv_gpu_wait_fence_interruptible(gpu, fence, timeout);
+		if (ret)
+			return ret;
 	}
 
 	if (etnaviv_obj->flags & ETNA_BO_CACHED) {
 		if (!etnaviv_obj->sgt) {
-			void * ret;
+			void *ret;
 
 			mutex_lock(&dev->struct_mutex);
 			ret = etnaviv_gem_get_pages(etnaviv_obj);
@@ -429,7 +431,7 @@ int etnaviv_gem_cpu_prep(struct drm_gem_object *obj, u32 op,
 		etnaviv_obj->last_cpu_prep_op = op;
 	}
 
-	return ret;
+	return 0;
 }
 
 int etnaviv_gem_cpu_fini(struct drm_gem_object *obj)
diff --git a/drivers/staging/etnaviv/etnaviv_gem.h b/drivers/staging/etnaviv/etnaviv_gem.h
index c991d12..f4330da 100644
--- a/drivers/staging/etnaviv/etnaviv_gem.h
+++ b/drivers/staging/etnaviv/etnaviv_gem.h
@@ -83,7 +83,7 @@ struct etnaviv_gem_object {
 	u32 offset;
 
 	/* cache maintenance */
-	uint32_t last_cpu_prep_op;
+	u32 last_cpu_prep_op;
 
 	struct etnaviv_gem_userptr userptr;
 };
-- 
2.6.2

