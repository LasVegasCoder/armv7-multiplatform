From 9b351c3782680f8342bd168782788d0ca6181a09 Mon Sep 17 00:00:00 2001
From: Russell King <rmk+kernel@arm.linux.org.uk>
Date: Sun, 22 Nov 2015 23:01:45 +0000
Subject: [PATCH 166/194] staging: etnaviv: switch to dumping active BOs from
 MMU list

Switch to dumping the active buffer objects by using the MMU list,
and dumping those buffers where the IOVA is in use.

Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
---
 drivers/staging/etnaviv/etnaviv_dump.c | 19 +++++++++++++------
 1 file changed, 13 insertions(+), 6 deletions(-)

diff --git a/drivers/staging/etnaviv/etnaviv_dump.c b/drivers/staging/etnaviv/etnaviv_dump.c
index d6cd6e2..aadbd32 100644
--- a/drivers/staging/etnaviv/etnaviv_dump.c
+++ b/drivers/staging/etnaviv/etnaviv_dump.c
@@ -117,6 +117,7 @@ static void etnaviv_core_dump_mem(struct core_dump_iterator *iter, u32 type,
 void etnaviv_core_dump(struct etnaviv_gpu *gpu)
 {
 	struct core_dump_iterator iter;
+	struct etnaviv_vram_mapping *vram;
 	struct etnaviv_gem_object *obj;
 	struct etnaviv_cmdbuf *cmd;
 	unsigned int n_obj, n_bomap_pages;
@@ -139,7 +140,11 @@ void etnaviv_core_dump(struct etnaviv_gpu *gpu)
 	}
 
 	/* Add in the active buffer objects */
-	list_for_each_entry(obj, &gpu->active_list, mm_list) {
+	list_for_each_entry(vram, &gpu->mmu->mappings, mmu_node) {
+		if (!vram->use)
+			continue;
+
+		obj = vram->object;
 		file_size += obj->base.size;
 		n_bomap_pages += obj->base.size >> PAGE_SHIFT;
 		n_obj++;
@@ -187,11 +192,15 @@ void etnaviv_core_dump(struct etnaviv_gpu *gpu)
 		bomap_start = bomap = NULL;
 	}
 
-	list_for_each_entry(obj, &gpu->active_list, mm_list) {
-		struct etnaviv_vram_mapping *vram;
+	list_for_each_entry(vram, &gpu->mmu->mappings, mmu_node) {
 		struct page **pages;
 		void *vaddr;
 
+		if (vram->use == 0)
+			continue;
+
+		obj = vram->object;
+
 		pages = etnaviv_gem_get_pages(obj);
 		if (pages) {
 			int j;
@@ -202,9 +211,7 @@ void etnaviv_core_dump(struct etnaviv_gpu *gpu)
 				*bomap++ = cpu_to_le64(page_to_phys(*pages++));
 		}
 
-		vram = etnaviv_gem_get_vram_mapping(obj, gpu->mmu);
-		if (vram)
-			iter.hdr->iova = cpu_to_le64(vram->iova);
+		iter.hdr->iova = cpu_to_le64(vram->iova);
 
 		vaddr = etnaviv_gem_vaddr_locked(&obj->base);
 		if (vaddr && !IS_ERR(vaddr))
-- 
2.6.2

