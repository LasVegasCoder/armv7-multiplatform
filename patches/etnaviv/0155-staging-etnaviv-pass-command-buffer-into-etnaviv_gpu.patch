From 88c87fe78e3b8af841e6b2c590216794a1c0cb0b Mon Sep 17 00:00:00 2001
From: Russell King <rmk+kernel@arm.linux.org.uk>
Date: Wed, 18 Nov 2015 22:23:34 +0000
Subject: [PATCH 155/194] staging: etnaviv: pass command buffer into
 etnaviv_gpu_submit()

Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
---
 drivers/staging/etnaviv/etnaviv_gem.h        |  1 -
 drivers/staging/etnaviv/etnaviv_gem_submit.c | 11 +++--------
 drivers/staging/etnaviv/etnaviv_gpu.c        | 14 ++++++--------
 drivers/staging/etnaviv/etnaviv_gpu.h        |  2 +-
 4 files changed, 10 insertions(+), 18 deletions(-)

diff --git a/drivers/staging/etnaviv/etnaviv_gem.h b/drivers/staging/etnaviv/etnaviv_gem.h
index 45b27a5..8543916 100644
--- a/drivers/staging/etnaviv/etnaviv_gem.h
+++ b/drivers/staging/etnaviv/etnaviv_gem.h
@@ -111,7 +111,6 @@ struct etnaviv_gem_submit {
 	struct ww_acquire_ctx ticket;
 	u32 fence;
 	unsigned int nr_bos;
-	struct etnaviv_cmdbuf *cmdbuf;
 	struct {
 		u32 flags;
 		struct etnaviv_gem_object *obj;
diff --git a/drivers/staging/etnaviv/etnaviv_gem_submit.c b/drivers/staging/etnaviv/etnaviv_gem_submit.c
index 9c24968..0b78ad5 100644
--- a/drivers/staging/etnaviv/etnaviv_gem_submit.c
+++ b/drivers/staging/etnaviv/etnaviv_gem_submit.c
@@ -57,7 +57,6 @@ static struct etnaviv_gem_submit *submit_create(struct drm_device *dev,
 
 		/* initially, until copy_from_user() and bo lookup succeeds: */
 		submit->nr_bos = 0;
-		submit->cmdbuf = NULL;
 
 		INIT_LIST_HEAD(&submit->bo_list);
 		ww_acquire_init(&submit->ticket, &reservation_ww_class);
@@ -282,9 +281,6 @@ static void submit_cleanup(struct etnaviv_gem_submit *submit, bool fail)
 		drm_gem_object_unreference(&etnaviv_obj->base);
 	}
 
-	if (submit->cmdbuf)
-		etnaviv_gpu_cmdbuf_free(submit->cmdbuf);
-
 	ww_acquire_fini(&submit->ticket);
 	kfree(submit);
 }
@@ -409,11 +405,10 @@ int etnaviv_ioctl_gem_submit(struct drm_device *dev, void *data,
 
 	memcpy(cmdbuf->vaddr, stream, args->stream_size);
 	cmdbuf->user_size = ALIGN(args->stream_size, 8);
-	/* transfer ownership of cmdbuf to submit */
-	submit->cmdbuf = cmdbuf;
-	cmdbuf = NULL;
 
-	ret = etnaviv_gpu_submit(gpu, submit);
+	ret = etnaviv_gpu_submit(gpu, submit, cmdbuf);
+	if (ret == 0)
+		cmdbuf = NULL;
 
 	args->fence = submit->fence;
 
diff --git a/drivers/staging/etnaviv/etnaviv_gpu.c b/drivers/staging/etnaviv/etnaviv_gpu.c
index d3437b5..5a080d1 100644
--- a/drivers/staging/etnaviv/etnaviv_gpu.c
+++ b/drivers/staging/etnaviv/etnaviv_gpu.c
@@ -1089,7 +1089,7 @@ void etnaviv_gpu_pm_put(struct etnaviv_gpu *gpu)
 
 /* add bo's to gpu's ring, and kick gpu: */
 int etnaviv_gpu_submit(struct etnaviv_gpu *gpu,
-	struct etnaviv_gem_submit *submit)
+	struct etnaviv_gem_submit *submit, struct etnaviv_cmdbuf *cmdbuf)
 {
 	unsigned int event, i;
 	int ret;
@@ -1119,18 +1119,16 @@ int etnaviv_gpu_submit(struct etnaviv_gpu *gpu,
 	gpu->submitted_fence = submit->fence;
 	gpu->event[event].fence = submit->fence;
 
-	if (gpu->lastctx != submit->cmdbuf->ctx) {
+	if (gpu->lastctx != cmdbuf->ctx) {
 		gpu->mmu->need_flush = true;
 		gpu->switch_context = true;
-		gpu->lastctx = submit->cmdbuf->ctx;
+		gpu->lastctx = cmdbuf->ctx;
 	}
 
-	etnaviv_buffer_queue(gpu, event, submit->cmdbuf);
+	etnaviv_buffer_queue(gpu, event, cmdbuf);
 
-	/* take ownership of cmdbuffer*/
-	submit->cmdbuf->fence = submit->fence;
-	list_add_tail(&submit->cmdbuf->gpu_active_list, &gpu->active_cmd_list);
-	submit->cmdbuf = NULL;
+	cmdbuf->fence = submit->fence;
+	list_add_tail(&cmdbuf->gpu_active_list, &gpu->active_cmd_list);
 
 	for (i = 0; i < submit->nr_bos; i++) {
 		struct etnaviv_gem_object *etnaviv_obj = submit->bos[i].obj;
diff --git a/drivers/staging/etnaviv/etnaviv_gpu.h b/drivers/staging/etnaviv/etnaviv_gpu.h
index 00603fb..dc04bdf 100644
--- a/drivers/staging/etnaviv/etnaviv_gpu.h
+++ b/drivers/staging/etnaviv/etnaviv_gpu.h
@@ -191,7 +191,7 @@ int etnaviv_gpu_wait_fence_interruptible(struct etnaviv_gpu *gpu,
 int etnaviv_gpu_wait_obj_inactive(struct etnaviv_gpu *gpu,
 	struct etnaviv_gem_object *etnaviv_obj, struct timespec *timeout);
 int etnaviv_gpu_submit(struct etnaviv_gpu *gpu,
-	struct etnaviv_gem_submit *submit);
+	struct etnaviv_gem_submit *submit, struct etnaviv_cmdbuf *cmdbuf);
 struct etnaviv_cmdbuf *etnaviv_gpu_cmdbuf_new(struct etnaviv_gpu *gpu,
 					      u32 size);
 void etnaviv_gpu_cmdbuf_free(struct etnaviv_cmdbuf *cmdbuf);
-- 
2.6.2

