From ba46078a9bf1a97ae8bfd1eed79db5f271a8f764 Mon Sep 17 00:00:00 2001
From: Russell King <rmk+kernel@arm.linux.org.uk>
Date: Thu, 22 Oct 2015 14:52:11 +0100
Subject: [PATCH 136/149] staging: etnaviv: safely size the etnaviv_gem_submit
 structure

The etnaviv_gem_submit contains a variable length array - the size of
the structure depends on the number of buffer objects we have.  When
calculating the size of this structure from user input, we must be
careful not to overflow.  Provide a helper (size_vstruct) to allow us
to safely size these objects, avoiding any overflow.

Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
---
 drivers/staging/etnaviv/etnaviv_gem_submit.c | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/etnaviv/etnaviv_gem_submit.c b/drivers/staging/etnaviv/etnaviv_gem_submit.c
index b410fa8..7fded9f 100644
--- a/drivers/staging/etnaviv/etnaviv_gem_submit.c
+++ b/drivers/staging/etnaviv/etnaviv_gem_submit.c
@@ -32,11 +32,23 @@ static inline void __user *to_user_ptr(u64 address)
 	return (void __user *)(uintptr_t)address;
 }
 
+/*
+ * Return the storage size of a structure with a variable length array.
+ * The array is nelem elements of elem_size, where the base structure
+ * is defined by base.  If the size overflows size_t, return zero.
+ */
+static size_t size_vstruct(size_t nelem, size_t elem_size, size_t base)
+{
+	if (elem_size && nelem > (SIZE_MAX - base) / elem_size)
+		return 0;
+	return base + nelem * elem_size;
+}
+
 static struct etnaviv_gem_submit *submit_create(struct drm_device *dev,
-		struct etnaviv_gpu *gpu, int nr)
+		struct etnaviv_gpu *gpu, size_t nr)
 {
 	struct etnaviv_gem_submit *submit;
-	int sz = sizeof(*submit) + (nr * sizeof(submit->bos[0]));
+	size_t sz = size_vstruct(nr, sizeof(submit->bos[0]), sizeof(*submit));
 
 	submit = kmalloc(sz, GFP_TEMPORARY | __GFP_NOWARN | __GFP_NORETRY);
 	if (submit) {
-- 
2.6.2

