From a2166a395f21891c0592b98d6dca56305285db29 Mon Sep 17 00:00:00 2001
From: Russell King <rmk+kernel@arm.linux.org.uk>
Date: Thu, 19 Nov 2015 23:16:29 +0000
Subject: [PATCH 161/194] staging: etnaviv: move bulk of submission out of DRM
 struct_mutex

Move the bulk of the GPU submission code out from under the DRM
struct_mutex.  We move all the ww mutex operations out, along with
the object lookup, and their cleanup functions too.  We leave the
object pinning/unpinning and relocation processing inside the lock.

Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
---
 drivers/staging/etnaviv/etnaviv_gem_submit.c | 42 +++++++++++++++-------------
 1 file changed, 23 insertions(+), 19 deletions(-)

diff --git a/drivers/staging/etnaviv/etnaviv_gem_submit.c b/drivers/staging/etnaviv/etnaviv_gem_submit.c
index 7bf26ac..4c77fc2 100644
--- a/drivers/staging/etnaviv/etnaviv_gem_submit.c
+++ b/drivers/staging/etnaviv/etnaviv_gem_submit.c
@@ -96,6 +96,10 @@ static int submit_lookup_objects(struct etnaviv_gem_submit *submit,
 			goto out_unlock;
 		}
 
+		/*
+		 * Take a refcount on the object. The file table lock
+		 * prevents the object_idr's refcount on this being dropped.
+		 */
 		drm_gem_object_reference(obj);
 
 		submit->bos[i].obj = to_etnaviv_bo(obj);
@@ -279,7 +283,7 @@ static void submit_cleanup(struct etnaviv_gem_submit *submit)
 		struct etnaviv_gem_object *etnaviv_obj = submit->bos[i].obj;
 
 		submit_unlock_object(submit, i);
-		drm_gem_object_unreference(&etnaviv_obj->base);
+		drm_gem_object_unreference_unlocked(&etnaviv_obj->base);
 	}
 
 	ww_acquire_fini(&submit->ticket);
@@ -356,6 +360,20 @@ int etnaviv_ioctl_gem_submit(struct drm_device *dev, void *data,
 		goto err_submit_cmds;
 	}
 
+	submit = submit_create(dev, gpu, args->nr_bos);
+	if (!submit) {
+		ret = -ENOMEM;
+		goto err_submit_cmds;
+	}
+
+	ret = submit_lookup_objects(submit, file, bos, args->nr_bos);
+	if (ret)
+		goto err_submit_objects;
+
+	ret = submit_lock_objects(submit);
+	if (ret)
+		goto err_submit_objects;
+
 	/*
 	 * Avoid big circular locking dependency loops:
 	 * - reading debugfs results in mmap_sem depending on i_mutex_key#3
@@ -379,20 +397,6 @@ int etnaviv_ioctl_gem_submit(struct drm_device *dev, void *data,
 
 	mutex_lock(&dev->struct_mutex);
 
-	submit = submit_create(dev, gpu, args->nr_bos);
-	if (!submit) {
-		ret = -ENOMEM;
-		goto out;
-	}
-
-	ret = submit_lookup_objects(submit, file, bos, args->nr_bos);
-	if (ret)
-		goto out;
-
-	ret = submit_lock_objects(submit);
-	if (ret)
-		goto out;
-
 	ret = submit_pin_objects(submit);
 	if (ret)
 		goto out;
@@ -418,10 +422,7 @@ int etnaviv_ioctl_gem_submit(struct drm_device *dev, void *data,
 	args->fence = submit->fence;
 
 out:
-	if (submit) {
-		submit_unpin_objects(submit);
-		submit_cleanup(submit, !!ret);
-	}
+	submit_unpin_objects(submit);
 	mutex_unlock(&dev->struct_mutex);
 
 	etnaviv_gpu_pm_put(gpu);
@@ -434,6 +435,9 @@ out:
 	if (ret == -EAGAIN)
 		flush_workqueue(priv->wq);
 
+err_submit_objects:
+	submit_cleanup(submit);
+
 err_submit_cmds:
 	/* if we still own the cmdbuf */
 	if (cmdbuf)
-- 
2.6.2

