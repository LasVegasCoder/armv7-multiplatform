From 1261c771ae4b1b49ec49ee065b4090e543d948a3 Mon Sep 17 00:00:00 2001
From: Robert Nelson <robertcnelson@gmail.com>
Date: Tue, 1 Nov 2016 15:27:30 -0500
Subject: [PATCH 5/8] Revert "wlcore: spi: Populate config firmware data"

This reverts commit c815fdebef444d591f57a1e90dcfa0e2f8112e10.

Signed-off-by: Robert Nelson <robertcnelson@gmail.com>
---
 drivers/net/wireless/ti/wlcore/spi.c | 42 ++++++++++++++++--------------------
 1 file changed, 18 insertions(+), 24 deletions(-)

diff --git a/drivers/net/wireless/ti/wlcore/spi.c b/drivers/net/wireless/ti/wlcore/spi.c
index f949ad2b..a336493 100644
--- a/drivers/net/wireless/ti/wlcore/spi.c
+++ b/drivers/net/wireless/ti/wlcore/spi.c
@@ -79,19 +79,15 @@
 #define WSPI_MAX_NUM_OF_CHUNKS \
 	((SPI_AGGR_BUFFER_SIZE / WSPI_MAX_CHUNK_SIZE) + 1)
 
-static const struct wilink_family_data wl127x_data = {
-	.name = "wl127x",
-	.nvs_name = "ti-connectivity/wl127x-nvs.bin",
-};
 
-static const struct wilink_family_data wl128x_data = {
-	.name = "wl128x",
-	.nvs_name = "ti-connectivity/wl128x-nvs.bin",
-};
+static const struct wilink_family_data *wilink_data;
 
 static const struct wilink_family_data wl18xx_data = {
 	.name = "wl18xx",
-	.cfg_name = "ti-connectivity/wl18xx-conf.bin",
+};
+
+static const struct wilink_family_data wl12xx_data = {
+	.name = "wl12xx",
 };
 
 struct wl12xx_spi_glue {
@@ -429,10 +425,10 @@ static struct wl1271_if_operations spi_ops = {
 };
 
 static const struct of_device_id wlcore_spi_of_match_table[] = {
-	{ .compatible = "ti,wl1271", .data = &wl127x_data},
-	{ .compatible = "ti,wl1273", .data = &wl127x_data},
-	{ .compatible = "ti,wl1281", .data = &wl128x_data},
-	{ .compatible = "ti,wl1283", .data = &wl128x_data},
+	{ .compatible = "ti,wl1271", .data = &wl12xx_data},
+	{ .compatible = "ti,wl1273", .data = &wl12xx_data},
+	{ .compatible = "ti,wl1281", .data = &wl12xx_data},
+	{ .compatible = "ti,wl1283", .data = &wl12xx_data},
 	{ .compatible = "ti,wl1801", .data = &wl18xx_data},
 	{ .compatible = "ti,wl1805", .data = &wl18xx_data},
 	{ .compatible = "ti,wl1807", .data = &wl18xx_data},
@@ -460,9 +456,9 @@ static int wlcore_probe_of(struct spi_device *spi, struct wl12xx_spi_glue *glue,
 	if (!of_id)
 		return -ENODEV;
 
-	pdev_data->family = of_id->data;
+	wilink_data = of_id->data;
 	dev_info(&spi->dev, "selected chip family is %s\n",
-		 pdev_data->family->name);
+		 wilink_data->name);
 
 	if (of_find_property(dt_node, "clock-xtal", NULL))
 		pdev_data->ref_clock_xtal = true;
@@ -479,15 +475,13 @@ static int wlcore_probe_of(struct spi_device *spi, struct wl12xx_spi_glue *glue,
 static int wl1271_probe(struct spi_device *spi)
 {
 	struct wl12xx_spi_glue *glue;
-	struct wlcore_platdev_data *pdev_data;
+	struct wlcore_platdev_data pdev_data;
 	struct resource res[1];
 	int ret;
 
-	pdev_data = devm_kzalloc(&spi->dev, sizeof(*pdev_data), GFP_KERNEL);
-	if (!pdev_data)
-		return -ENOMEM;
+	memset(&pdev_data, 0x00, sizeof(pdev_data));
 
-	pdev_data->if_ops = &spi_ops;
+	pdev_data.if_ops = &spi_ops;
 
 	glue = devm_kzalloc(&spi->dev, sizeof(*glue), GFP_KERNEL);
 	if (!glue) {
@@ -511,7 +505,7 @@ static int wl1271_probe(struct spi_device *spi)
 		return PTR_ERR(glue->reg);
 	}
 
-	ret = wlcore_probe_of(spi, glue, pdev_data);
+	ret = wlcore_probe_of(spi, glue, &pdev_data);
 	if (ret) {
 		dev_err(glue->dev,
 			"can't get device tree parameters (%d)\n", ret);
@@ -524,7 +518,7 @@ static int wl1271_probe(struct spi_device *spi)
 		return ret;
 	}
 
-	glue->core = platform_device_alloc(pdev_data->family->name,
+	glue->core = platform_device_alloc(wilink_data->name,
 					   PLATFORM_DEVID_AUTO);
 	if (!glue->core) {
 		dev_err(glue->dev, "can't allocate platform_device\n");
@@ -545,8 +539,8 @@ static int wl1271_probe(struct spi_device *spi)
 		goto out_dev_put;
 	}
 
-	ret = platform_device_add_data(glue->core, pdev_data,
-				       sizeof(*pdev_data));
+	ret = platform_device_add_data(glue->core, &pdev_data,
+				       sizeof(pdev_data));
 	if (ret) {
 		dev_err(glue->dev, "can't add platform data\n");
 		goto out_dev_put;
-- 
2.10.2

